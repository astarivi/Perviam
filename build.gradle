plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'io.freefair.lombok' version '8.6'
    id 'io.micronaut.application' version '4.4.2'
    id 'io.micronaut.aot' version '4.4.2'
}

group = 'ovh.astarivi.perviam'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.1'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    // Micronaut
    annotationProcessor 'io.micronaut:micronaut-http-validation'
    annotationProcessor 'io.micronaut.serde:micronaut-serde-processor'
    implementation 'io.micronaut.serde:micronaut-serde-jackson'
    compileOnly 'io.micronaut:micronaut-http-client'

    // Logging
    implementation 'org.tinylog:tinylog-api:2.6.2'
    runtimeOnly 'org.tinylog:tinylog-impl:2.6.2'
    runtimeOnly 'org.tinylog:slf4j-tinylog:2.6.2'
    runtimeOnly 'ch.qos.logback:logback-classic'

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'

    // Test
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'io.micronaut:micronaut-http-client'
}

application {
    mainClass = "ovh.astarivi.perviam.Application"
}

java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}

graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("ovh.astarivi.perviam.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}

tasks.named("dockerfileNative") {
    jdkVersion = "21"
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

shadowJar {
    mergeServiceFiles()
    archiveFileName = 'perviam.jar'
}